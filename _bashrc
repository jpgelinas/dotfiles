# If not running interactively, don't do anything
[ -z "$PS1" ] && return

#export CDPATH=:/x
export QT_PATH=/usr/bin
export PATH=~/bin:~/.cabal/bin:$PATH
export XC_PATH=~/src/xivo/xivo-client-qt/bin
export PYTHONPATH=\
$HOME/src/python/xivodev/:\
/x/xivo-ws/:\
/x/xivo-amid/:\
/x/xivo-lib-python/:\
/x/xivo-dao/:\
/x/xivo-agent/:\
/x/xivo-provisioning/:\
/x/xivo-dird/:\
/x/xivo-dist/:\
/x/xivo-acceptance/:\
/x/xivo-bus/:\
/x/xivo-tools/dev-tools/repo-check/:\
/x/pylinphonelib/
#
#osx color terminal
export CLICOLOR=1
# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# Set up TERM variables.
# vt100 and xterm have no color in vim (at least on unixs), but if we call them xterm-color, they will.
# (vt100 for F-Secure SSH.)
# This may well be the case for some other terms, so I'm putting them here.
# Also set up a variable to indicate whether to set up the title functions.
# TODO gnome-terminal, or however it reports itself
case $TERM in

  screen)
    TERM_IS_COLOR=true
    TERM_NOT_RECOGNIZED_AS_COLOR_BY_VIM=false
    TERM_NOT_RECOGNIZED_BY_SUN_UTILS=false
    TERM_CAN_TITLE=true
  ;;

  xterm-color|color_xterm|rxvt|Eterm|screen*) # screen.linux|screen-w
    TERM_IS_COLOR=true
    TERM_NOT_RECOGNIZED_AS_COLOR_BY_VIM=false
    TERM_NOT_RECOGNIZED_BY_SUN_UTILS=true
    TERM_CAN_TITLE=true
  ;;

  linux)
    TERM_IS_COLOR=true
    TERM_NOT_RECOGNIZED_AS_COLOR_BY_VIM=false
    TERM_NOT_RECOGNIZED_BY_SUN_UTILS=true
    TERM_CAN_TITLE=false
  ;;

  xterm|vt100)
    TERM_IS_COLOR=true
    TERM_NOT_RECOGNIZED_AS_COLOR_BY_VIM=true
    TERM_NOT_RECOGNIZED_BY_SUN_UTILS=false
    TERM_CAN_TITLE=true
  ;;

  *xterm*|eterm|rxvt*)
    TERM_IS_COLOR=true
    TERM_NOT_RECOGNIZED_AS_COLOR_BY_VIM=true
    TERM_NOT_RECOGNIZED_BY_SUN_UTILS=true
    TERM_CAN_TITLE=true
  ;;

  *)
    TERM_IS_COLOR=false
    TERM_NOT_RECOGNIZED_AS_COLOR_BY_VIM=false
    TERM_NOT_RECOGNIZED_BY_SUN_UTILS=false
    TERM_CAN_TITLE=false
  ;;

esac

alias pacman='sudo pacman'
alias virsh='sudo virsh'
alias http='python2 -m SimpleHTTPServer'
alias vi='gvim'
alias catprofiles='cat ~/.config/XIVO/XIVO_Client.ini | grep engine'
alias xdg='xivo-dev -v -r root@ogit'
alias xdt='xivo-dev -v -r root@otest'
alias cdx='cd /home/jp/src/xivo/'
alias grep='grep --exclude-dir=".git"'
alias switch-test='switch_vlan 100 3,4,5,6,7,8'
alias switch-split='switch_vlan 333 6,7,8; switch_vlan 330 3,4,5'
alias switch-full0='switch_vlan 330 3,4,5,6,7,8'
alias switch-full3='switch_vlan 333 3,4,5,6,7,8'
alias setkbus='setxkbmap us -variant altgr-intl'
alias glog="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias llettuce="/x/xivo-acceptance/utils/scenarios.sh"
alias halt="sudo systemctl poweroff"
alias gitk="gitk --all&"
alias evil="emacsclient -c -nw"
alias xalembic='alembic -c /x/.xivoalembic.ini'

# dircolors... make sure that we have a color terminal, dircolors exists, and ls supports it.
if $TERM_IS_COLOR && ( dircolors --help && ls --color ) &> /dev/null; then
  # For some reason, the unixs machines need me to use $HOME instead of ~
  # List files from highest priority to lowest.  As soon as the loop finds one that works, it will exit.
  for POSSIBLE_DIR_COLORS in "$HOME/.dir_colors" "/etc/DIR_COLORS"; do
    [[ -f "$POSSIBLE_DIR_COLORS" ]] && [[ -r "$POSSIBLE_DIR_COLORS" ]] && eval `dircolors -b "$POSSIBLE_DIR_COLORS"` && break
  done

  alias ls="ls --color=auto"
  alias ll="ls --color=auto -l"
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
else
  # No color, so put a slash at the end of directory names, etc. to differentiate.
  alias ls="ls -F"
  alias ll="ls -lF"
fi

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


BLUE=`tput setf 1`
GREEN=`tput setf 2`
CYAN=`tput setf 3`
RED=`tput setf 4`
MAGENTA=`tput setf 5`
YELLOW=`tput setf 6`
WHITE=`tput setf 7`
ENDCOLOR="\e[0m"


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
# Set $TERM for libvte terminals that set $TERM wrong (like gnome-terminal)
{
  [ "_$TERM" = "_xterm" ] && type ldd && type grep && type tput && [ -L "/proc/$PPID/exe" ] && {
    if ldd /proc/$PPID/exe | grep libvte; then
      if [ "`tput -Txterm-256color colors`" = "256" ]; then
        TERM=xterm-256color
      elif [ "`tput -Txterm-256color colors`" = "256" ]; then
        TERM=xterm-256color
      elif tput -T xterm; then
        TERM=xterm
      fi
    fi
  }
} >/dev/null 2>/dev/null

venwrap=`type -P virtualenvwrapper.sh`
if [ "$venwrap" != "" ]; then
    source $venwrap
fi

vim=`type -P vim`
if [ "$vim" == "" ]; then
    vim="gvim -v"
fi

alias vim="$vim"

#PYTHONSTARTUP=~/.pythonrc.py
#export PYTHONSTARTUP

#parse_git_branch ()
#{
#  git name-rev HEAD 2> /dev/null | sed 's#HEAD\ \(.*\)#(git::\1)#'
#}

set -o emacs
export EDITOR="$vim"
export GIT_EDITOR="$vim"


#### Prompt PS1
###PS1='\[\033[01;31m\]\w\[\033[00m\]\n\[\033[01;34m\]\u\[\033[01;32m\]@\[\033[01;34m\]\h\[\033[00m\]$ '
###
#### If this is an xterm set the title to user@host:dir
###case "$TERM" in
###xterm*|rxvt*)
###    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
###    ;;
###*)
###    ;;
###esac
###
###function _git_prompt() {
###    local git_status="`git status -unormal 2>&1`"
###    if ! [[ "$git_status" =~ Not\ a\ git\ repo ]]; then
###        if [[ "$git_status" =~ nothing\ to\ commit ]]; then
###            local ansi=42
###        elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\ present ]]; then
###            local ansi=43
###        else
###            local ansi=45
###        fi
###        if [[ "$git_status" =~ On\ branch\ ([^[:space:]]+) ]]; then
###            branch=${BASH_REMATCH[1]}
###            test "$branch" != master || branch=' '
###        else
###            # Detached HEAD.  (branch=HEAD is a faster alternative.)
###            branch="(`git describe --all --contains --abbrev=4 HEAD 2> /dev/null ||
###                echo HEAD`)"
###        fi
###        echo -n '\[\e[0;37;'"$ansi"';1m\]'"$branch"'\[\e[0m\] '
###    fi
###}
###function _prompt_command() {
###    PS1="`_git_prompt`"'\[\033[01;31m\]\w\[\033[00m\]\n\[\033[01;34m\]\u\[\033[01;32m\]@\[\033[01;34m\]\h\[\033[00m\]$ '
###}
###PROMPT_COMMAND=_prompt_command
source ~/.bash/gitprompt.sh

# Add git and svn branch names

umask 0022
h() { if [ -z "$1" ]; then history; else history | grep "$@"; fi; }

_JAVA_AWT_WM_NONREPARENTING=1;

man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

function restore () {
    vm_name=${1:-"o0-git"}
    VBoxManage controlvm $vm_name poweroff > /dev/null
    sleep 1
    VBoxManage snapshot $vm_name restorecurrent > /dev/null
    VBoxManage startvm $vm_name > /dev/null
}

alias rebuild='ssh farm packaging-farm --cd skaro rebuild && ssh mirror ./update_xivo-dev'

function coverage () {
    if [ $# -lt 2 -o "$1" = "--help" -o "$1" = "-h" ] ; then
        echo "Usage: coverage module_name coverage_starting_point"
        return
    fi
    local module_name="$1"
    local module_path="$2"
    rm -r ".coverage" "cover"
    nosetests2 --with-coverage --cover-package="$module_name" --cover-html "$module_path"
    luakit cover/index.html
}
